version: '3.8'

services:
  my-little-app_node: # Friendly service name for the Node.js app
    build: .
    container_name: my-little-app_node # Explicit container name
    ports:
      - "${PORT:-3000}:${PORT:-3000}"
    volumes:
      - .:/app
      - /app/node_modules
    environment:
      - NODE_ENV=${NODE_ENV:-development}
      - DB_HOST=db
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_NAME=${DB_NAME}
      - DB_PORT=${DB_PORT:-3306}
    depends_on:
      - my-little-app_db
    networks:
      - my-little-app
    labels: # Add labels for description
      com.docker.compose.service: my-little-app_node
      com.docker.description: "Node.js application service"

  my-little-app_db: # Friendly service name for the database
    image: mysql:8.0
    container_name: my-little-app_db # Explicit container name
    volumes:
      - mysql_data:/var/lib/mysql
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_DATABASE=${DB_NAME}
    ports:
      - "${MYSQL_PORT:-3306}:3306"
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "127.0.0.1", "-u", "root", "-p${MYSQL_ROOT_PASSWORD}"]
      timeout: 20s
      retries: 10
    networks:
      - my-little-app
    labels: # Add labels for description
      com.docker.compose.service: my-little-app_db
      com.docker.description: "MySQL database service"

volumes:
  mysql_data:

networks:
  my-little-app:
    driver: bridge
